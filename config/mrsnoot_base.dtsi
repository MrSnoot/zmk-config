#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/num_word.dtsi>

#define BT(n) BT_SEL n

// Layers
#define OPY_L 0
#define NAV_L 1
#define MS_L  2
#define NUM_L 3
#define SYM_L 4
#define ADJ_L 5

// Default
#define _______ &trans
#define XXXXXXX &none

// Thumbs
#define OSL_NUM &sl NUM_L
#define NAV_SPC &lt NAV_L SPACE
#define MS_ENT  &lt MS_L ENTER
#define OSL_SYM &sl SYM_L

// Home Row Mods
#define HRM_O_H &bhm LSHFT H
#define HRM_O_A &bhm LALT A
#define HRM_O_E &bhm LCTRL E
#define HRM_O_I &kp I
#define HRM_O_T &kp T
#define HRM_O_N &bhm LCTRL N
#define HRM_O_S &bhm LALT S
#define HRM_O_R &bhm RSHFT R

#define NF_F6 &bhm LSHFT F6
#define NF_F7 &bhm LALT F7
#define NF_F8 &bhm LCTRL F8
#define NF_F9 &bhm LGUI F9
#define NF_4 &bhm LGUI N4
#define NF_5 &bhm LCTRL N5
#define NF_6 &bhm LALT N6
#define NF_PLS &bhm RSHFT RBKT

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

&caps_word {
  // do continue on: Backspace - ä ö ü
  continue-list = <BSPC SLASH SEMI QUOT LBKT>;
};

&num_word {
   // do continue on: Backspace delete . , * + - =
  continue-list = <BSPC DEL DOT COMMA LS(RBKT) RBKT SLASH LS(N0)>;
};

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

&kscan0 {
    wakeup-source;
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            // hold-trigger-key-positions = <KEYS_R THUMBS>;
            // hold-trigger-on-release;   
            bindings = <&kp>, <&kp>;
        };
    };

    // Conditional layer only when we have less thumb keys
    cond_layers {
        compatible = "zmk,conditional-layers";
    	tri {
    	    if-layers = <NUM_L SYM_L>;
    	    then-layer = <ADJ_L>;
        };
    };
};